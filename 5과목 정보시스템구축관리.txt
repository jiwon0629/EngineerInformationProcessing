# 1장 정보스템 구축 관리

구조적 방법론 
정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 처리(Proess) 중심의 방법론

정보공학 방법론
정보 시스템 개발 주기를 이용하여 대규모 정보 시스템을 구축하는데 적합하다.
개체 관계도(ERD; Entity- Relationship Diagram)를 사용한다.

컴포넌트 기반 방법론
컴포넌트 기반(CBD; Component Based Design)방법론은 기존의 시스템이나 소프트웨어를 구성하는 컴포넌트를 조합하여 하나의 새로운 애플리케이션을 만드는 방법론이다.
컴포넌트의 재사용(Reusability)이 가능하여 시간과 노력을 절감할 수 있다.
새로운 기능을 추가하는 것이 간단하여 확장성이 보장된다.
개발 준비 단계 -> 분석 단계 -> 설계 단계 -> 구현 단계 -> 테스트 단계 -> 전개 단계 -> 인도 단계

소프트웨어 재공학의 개요
분석(Analysis) : 기존 소프트웨어의 명세서를 확인하여 소프트웨어의 동작을 이해하고, 재공학할 대상을 선정하는 활동
재구성(Restructuring) : 기존 소프트웨어의 구조를 향상시키기 위하여 코드를 재구성하는 활동
역공학(Reverse Engineering) : 기존 소프트웨어를 분석하여 소프트웨어 개발 과정과 데이터 처리 과정을 설명하는 분석 및 설계 정보를 재발견하거나 다시 만들어 내는 활동
이식(Migration) : 기존 소프트웨어를 다른 운영체제나 하드웨어 환경에서 사용할 수 있도록 변환하는 활동

LOC(원시 코드 라인 수, source Line Of Code)기법
소프트웨어 각 기능의 원시 코드 라인 수의 비관치, 낙관치, 기대치를 측정하여 예측치를 구하고 이를 이용하여 비용을 산정하는 기법
산정 공식
- 노력(인월) = 개발기간 * 투입 인원
 = LOC / 1인당 월평균 생산 코드 라인 수
- 개발 비용 = 노력(인월) * 단위 비용(1인당 월평균 인건비)
- 개발 기간 = 노력(인월) / 투입 인원
- 생산성 = LOC / 노력(인월)





-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------



# 2장

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------



# 3장

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------



# 4장

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 5장

