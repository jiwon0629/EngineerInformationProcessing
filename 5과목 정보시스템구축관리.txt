# 1장 소프트웨어 개발 방법론 활용

[소프트웨어 개발 방법론]

구조적 방법론 
정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 처리(Proess) 중심의 방법론

정보공학 방법론
정보 시스템 개발 주기를 이용하여 대규모 정보 시스템을 구축하는데 적합하다.
개체 관계도(ERD; Entity- Relationship Diagram)를 사용한다.

컴포넌트 기반 방법론
컴포넌트 기반(CBD; Component Based Design)방법론은 기존의 시스템이나 소프트웨어를 구성하는 컴포넌트를 조합하여 하나의 새로운 애플리케이션을 만드는 방법론이다.
컴포넌트의 재사용(Reusability)이 가능하여 시간과 노력을 절감할 수 있다.
새로운 기능을 추가하는 것이 간단하여 확장성이 보장된다.
개발 준비 단계 -> 분석 단계 -> 설계 단계 -> 구현 단계 -> 테스트 단계 -> 전개 단계 -> 인도 단계

[S/W 공학의 발전적 추세]

소프트웨어 재공학의 개요
분석(Analysis) : 기존 소프트웨어의 명세서를 확인하여 소프트웨어의 동작을 이해하고, 재공학할 대상을 선정하는 활동
재구성(Restructuring) : 기존 소프트웨어의 구조를 향상시키기 위하여 코드를 재구성하는 활동
역공학(Reverse Engineering) : 기존 소프트웨어를 분석하여 소프트웨어 개발 과정과 데이터 처리 과정을 설명하는 분석 및 설계 정보를 재발견하거나 다시 만들어 내는 활동
이식(Migration) : 기존 소프트웨어를 다른 운영체제나 하드웨어 환경에서 사용할 수 있도록 변환하는 활동

[상향식 비용 산정 기법]

LOC(원시 코드 라인 수, source Line Of Code)기법
소프트웨어 각 기능의 원시 코드 라인 수의 비관치, 낙관치, 기대치를 측정하여 예측치를 구하고 이를 이용하여 비용을 산정하는 기법
산정 공식
- 노력(인월) = 개발기간 * 투입 인원
 = LOC / 1인당 월평균 생산 코드 라인 수
- 개발 비용 = 노력(인월) * 단위 비용(1인당 월평균 인건비)
- 개발 기간 = 노력(인월) / 투입 인원
- 생산성 = LOC / 노력(인월)

[수학적 산정 기법]

수학적 산정 기법에는 COCOMO 모형, Putnam 모형, 기능 점수(FP) 모형이 있다.
COCOMO의 소프트웨어 개발 유형
- 조직형(Organic Model) : 기관 내부에서 개발된 중.소규모의 소프트웨어로 일괄 자료 처리나 과학 기술 계산용, 비즈니스 자료 처리용 5만(50KDSI) 라인 이하의 소프트웨어를 개발하는 유형
- 반분리형(Semi-Detached Model) : 조직형과 내장형의 중간형으로 트랜잭션 처리 시스템이나 운영체제, 데이터베이스 관리 시스템 등의 30만(300KDSI) 라인 이하의 소프트웨어를 개발하는 유형
- 내장형(Embedded Model) : 초대형 규모의 트랜잭션 처리 시스템이나 운영체제 등의 30만(300KDSI) 라인 이상의 소프트웨어를 개발하는 유형

Putnam 모형
소프트웨어 생명 주기의 전 과정 동안에 사용될 노력의 분포를 가정해 주는 모형이다.

[프로젝트 일정 계획]

PERT(Program Evaluation and Review Technique, 프로그램 평가 및 검토 기술)는 프로젝트에 필요한 전체 작업의 상호 관계를 표시하는 네트워크로 각 작업별로 낙관적인 경우, 
가능성이 있는 경우, 비관적인 경우로 나누어 각 단게별 종료 시기를 결정하는 방법이다.

간트 차트는 시간선(Time-Line) 차트라고도 한다.
수평 막대의 길이는 각 작업(Task)의 기간을 나타낸다.

[소프트웨어 개발 표준]

ISO/IEC 12207
ISO(International Organization for Standardization, 국제표준화기구)에서 만든 표준 소프트웨어 생명 주기 프로세스
소프트웨어의 개발, 운영, 유지보수 등을 체계적으로 관리하기 위한 소프트웨어 생명 주기 표준을 제공한다.

CMMI(Capability Maturity Model Integration)
CMMI(능력 성숙도 통합 모델)는 소프트웨어 개발 조직의 업무 능력 및 조직의 성숙도를 평가하는 모델

SPICE(Software Process Improvement and Capability dEtermination)
SPICE(소프트웨어 처리 개선 및 능력 평가 기준)는 정보 시스템 분야에서 소프트웨어의 품질 및 생산성 향상을 위해 소프트웨어 프로세스를 평가 및 개선하는 국제 표준으로, 공식 명칭은 ISO/IEC 15504이다.
- 불완전(Incomplete)(Level 0) : 프로세스가 구현되지 않았거나 목적을 달성하지 못한 단계
- 수행(Performed)(Level 1) : 프로세스가 수행되고 목적이 달성된 단계
- 관리(Managed)(Level 2) : 정의된 자원의 한도 내에서 그 프로세스가 작업 산출물을 인도하는 단계
- 확립(Established)(Level 3) : 소프트웨어 공학 원칙에 기반하여 정의된 프로세스가 수행되는 단계
- 예측(Predictable)(Level 4) : 프로세스가 목적 달성을 위해 통제되고, 양적인 측정을 통해서 일관되게 수행하는 단계
- 최적화(Optimizing)(Level 5) : 프로세스 수행을 최적화하고, 지속적인 개선을 통해 업무 목적을 만족시키는 단계

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 2장 IT프로젝트 정보시스템 구축 관리

[네트워크 관련 신기술]

소프트웨어 정의 기술(SDE, SDx; Software-Defined Everything)
- 소프트웨어 정의 네트워킹(SDN; Software Defined Networking) : 네트워크를 컴퓨터처럼 모델링하여 여러 사용자가 각각의 소프트웨어들로 네트워킹을 가상화하여 제어하고 관리하는 네트워크
- 소프트웨어 정의 데이터 센터(SDDC; Software Defined Data Center) : 데이터 센터의 모든 자원을 가상화하여 인력의 개입없이 소프트웨어 조작만으로 관리 및 제어되는 데이터 센터
- 소프트웨어 정의 스토리지(SDS; Software-Defined Storage) : 물리적인 데이터 스토리지(Data Storage)를 가상화하여 여러 스토리지를 하나처럼 관리하거나, 하나의 스토리지를 여러 스토리지로 나눠 사용할 수 있는 기술

IoT 관련 용어어
- IoT(Internet of Things, 사물 인터넷) : 정보 통신 기술을 기반으로 실세계(Physical World)와 가상 세계(Virtual World)의 다양한 사물들을 인터넷으로 서로 연결하여 진보된 서비스를 제공하기 위한 서비스 기반 기술
- 메시 네트워크(Mesh Network) : 차세대 이동통신, 홈네트워킹, 공공 안전 등 특수 목적을 위한 새로운 방식의 네트워크 기술로, 대규모 디바이스의 네트워크 생성에 최적화되어 있음
- 피코넷(PICONET) : 여러 개의 독립된 통신장치가 블루투스 기술이나 UWB 통신 기술을 사용하여 통신망을 형성하는 무선 네트워크 기술
- 파장 분할 다중화(WDM, Wavelength Division Multiplexing) : 광섬유를 이용한 통신 기술의 하나로, 파장이 서로 다른 복수의 신호를 보냄으로써 여러 대의 단말기가 동시에 통신 회선을 사용할 수 있도록 하는 것
- 클라우드 기반 HSM(Cloud-based Hardware Security Module) : 클라우드를 기반으로 암호화 키의 생성.저장.처리 등의 작업을 수행하는 보안기기를 가리키는 용어
- 파스-타(PaaS-TA) : 소프트웨어 개발 환경을 제공하기 위해 개발한 개방형 클라우드 컴퓨팅 플랫폼
- 징(Zing) : 초고속 근접무선통신(NFC)
- SSO(Single Sign On) : 한 번의 로그인으로 개인이 가입한 모든 사이트를 이용할 수 있게 해주는 시스템
- 스마트 그리드(Smart Grid) : 정보 기술을 전력에 접목해 효율성을 높인 시스템으로, 전력 IT라고도 부름

[네트워크 구축]

CSMA/CA(Carrier Sense Multiple Access/Collision Avoidance)
무선 랜에서 데이터 전송 시 매체가 비어있음을 확인한 뒤 충돌을 피하기 위해 일정한 시간을 기다린 후 데이터를 전송하는 방법이다.

[경로 제어 / 트래픽 제어]

경로 제어 프로토콜
IGP(Interior Gateway Protocol, 내부 게이트웨이 프로토콜) : 하나의 자율 시스템(AS) 내의 라우팅에 사용되는 프로토콜
- RIP(Routing Information Protocol) : 현재 가장 널리 사용되는 라우팅 프로토콜로 거리 벡터 라우팅 프로토콜
  - 최단 경로 탐색에 Bellman-Ford 알고리즘이 사용된다.
  - 최대 홉(Hop) 수를 15로 제한
- OSPF(Open Shortest Path First protocol) : 인터넷 망에서 이용자가 최단 경로를 선정할 수 있도록 라우팅 정보에 노드 간의 거리 정보, 링크 상태 정보를 실시간으로 반영하여 최단 경로로 라우팅을 지원함
  - 최단 경로 탐색에 다익스트라(Dijkstra) 알고리즘을 사용함
EGP(Exterior Gateway Protocol, 외부 게이트웨이 프로토콜) : 게이트웨이 간의 라우팅에 사용되는 프로토콜
BGP(Border Gateway Protocol) : EGP의 단점을 보완하기 위해 만들어짐

[SW 관련 신기술]

SW 관련 용어
- 매시업(Mashup) : 웹에서 제공하는 정보 및 서비스를 이용하여 새로운 소프트웨어나 서비스, 데이터베이스 등을 만드는 기술이다.
- 서비스 지향 아키텍처(SOA; Service Oriented Architecture) : 정보시스템을 공유와 재사용이 가능한 서비스 단위나 컴포넌트 중심으로 구축하는 정보기술 아키텍처
- 디지털 트윈(Digital Twin) : 실제 물리적인 자신을 소프트웨어로 가상화함
- 증발품(Vaporware) : 배포 계획만 있고 실제 배포되지 않는 소프트웨어
- 텐서플로(TensorFlow) : 구글 브레인 팀이 만든 다양한 작업에 대해 데이터 흐름 프로그래밍을 위한 오픈소스 소프트웨어 라이브러리
- 도커(Docker) : 컨테이너 기술을 자동화하여 쉽게 사용할 수 있게 하는 오픈소스 프로젝트
- 스크래피(Scrapy) : Python 기반의 웹 크롤링 프레임워크, 코드 재사용성을 높이는 데 도움이 되며, 대규모의 크롤링 프로젝트에 적합함

[보안 관련 신기술]

보안 관련 용어
- 서비스형 블록 체인(BaaS; Blockchain as a Service) : 블록체인(Blockchain) 앱의 개발 환경을 클라우드 기반으로 제공하는 서비스
- OWASP(the Open Web Application Security Project) : 웹 정보 노출이나 악성 코드, 스크립트, 보안이 취약한 부분을 연구하는 비영리 단체
- TCP 래퍼(TCP Wrapper) : 외부 컴퓨터의 접속 인가 여부를 점검하여 접속을 허용 및 거부하는 보안용 도구
- 허니팟(Hoenypot) : 침입자를 속여 실제 공격을 당하는것처럼 보여줌으로써 추적 및 공격기법에 대한 정보를 수집함

[DB 관련 신기술]

- 하둡(Hadoop) : 오픈 소스를 기반으로 한 분산 컴퓨팅 플랫폼, 일반 PC급 컴퓨터들로 가상화된 대형 스토리지를 형성
- 맵리듀스(MapReduce) : 대용량 데이터를 분산 처리하기 위한 목적, 데이터를 연관성 있는 데이터 분류로 묶는 Map 작업을 수행한 후 중복 데이터를 제거하고 원하는 데이터를 추출하는 Reduce 작업을 수행함
- 타조(Tajo) : 오픈 소스 기반 분산 컴퓨팅 플랫폼인 아파치 하둡(Apache Hadoop) 기반의 분산 데이터 웨어하우스 프로젝트
- 데이터 마이닝(Data Minig) : 대량의 데이터를 분석하여 데이터 속에 대재되어 있는 변수 사이의 상호관계를 규명하여 패턴화함으로써 효율적인 데이터 추출이 가능함
- OLAP(Online Anayltical Processiong) : 다차원으로 이루어진 데이터로부터 통계적인 요약 정보를 분석하여 의사결정에 활용하는 방식
  - OLAP 연산 : Roll-up, Drill-down, Drill-through, Drill-across, Pivoting, Slicing, Dicing

[회복 / 병행제어]

회복(Recovery) : 트랜잭션들을 수행하는 도중 장애가 발생하여 데이터베이스가 손상되었을 때 손상되기 이전의 정상 상태로 복구하는 작업
회복 기법
연기 갱신 기법(Deferred Update) : 트랜잭션이 성공적으로 완료될 때까지 데이터베이스에 대한 실질적인 갱신을 연기하는 방법
  - 트랜잭션이 부분 완료되기 전에 장애가 발생하여 트랜잭션이 Rollback되면 트랜잭션이 실제 데이터베이스에 영향을 미치지 않았기 때문에 어떠한 갱신 내용도 취소(Undo)시킬 필요 없이 무시하면 됨
  - Redo 작업만 가능함
즉각 갱신 기법(Immediate Update) : 트랜잭션이 데이터를 갱신하면 트랜잭션이 부분 완료되기 전이라도 즉시 실제 데이터베이스에 반영하는 방법
  - 장애가 발생하여 회복 작업할 경우를 대비하여 갱신된 내용들은 Log에 보관시킴
  - 회복 작업을 할 경우에는 Redo와 Undo 모두 사용 가능함

병행제어(Concurrency Control) : 다중 프로그램의 이점을 활용하여 동시에 여러 개의 트랜잭션을 병행수행할 때, 동시에 실행되는 트랜잭션들이 데이터베이스의 일관성을 파괴하지 않도록 트랜잭션 간의 상호 작용을 제어하는 것
병행제어 기법의 종류
로킹(Locking)
  - 주요 데이터의 액세스를 상호 배타적으로 하는것
  - 트랜잭션들이 어떤 로킹 단위를 액세스하기 전에 Lock(잠금)을 요청해서 Lock이 허락되어야만 그 로킹 단위를 액세스할 수 있도록 하는 방법
타임 스탬프 순서 (Time Stamp Ordering) : 직렬성 순서를 결정하기 위해 트랜잭션 간의 처리 순서를 미리 선택하는 기법들 중에서 가장 보편적인 방법
  - 트랜잭션과 트랜잭션이 읽거나 갱신한 데이터에 대해 트랜잭션이 실행을 시작하기 전에 시간표(Time Stamp)를 부여하여 부여된 시간에 따라 트랜잭션 작업을 수행하는 기법

로킹 단위(Locking Granularity)
로킹 단위가 크면 로크 수가 작아 관리하기 쉽지만 병행성 수준이 낮아지고, 로킹 단위가 작으면 로크 수가 많아 관리하기 복잡해 오버헤드가 증가하지만 병행성 수준이 높아진다.

[교착상태]

교착상태(Dead Lock) : 상호 배제에 의해 나타나는 문제점으로, 둘 이상의 프로세스들이 자원을 점유한 상태에서 서로 다른 프로세스가 점유하고 있는 자원을 요구하며 무한정 기다리는 현상을 의미한다.
교착상태 발생의 필요 충분 조건
상호 배제(Mutual Exclusion) : 한 번의 한 개의 프로세스만이 공유 자원을 사용할 수 있어야 함
점유와 대기(Hold and Wait) : 최소한 하나의 자원을 점유하고 있으면서 다른 프로세스에 할당되어 사용되고 있는 자원을 추가로 점유하기 위해 대기하는 프로세스가 있어야 함

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 3장 소프트웨어 개발 보안 구축

[Secure SDLC]

보안 요소
소프트웨어 개발에 있어 충족시켜야할 요소 및 요건
기밀성 : 시스템 내의 정보와 자원은 인가된 사용자에게만 접근이 허용된다. 정보가 전송 중에 노출되더라도 데이터를 읽을 수 없다.
무결성 : 시스템 내의 정보는 오직 인가된 사용자만 수정할 수 있다.
가용성 : 인가받은 사용자는 언제라도 사용할 수 있다.

[입력 데이터 검증 및 표현]

입력 데이터 검증 및 표현의 보안 약점
SQL삽입(SQL Injection) : 웹 응용 프로그램에 SQL을 삽입하여 내부 데이터베이스(DB) 서버의 데이터를 유출 및 변조하고, 관리자 인증을 우회하는 보안 약점이다.
경로 조작 및 자원 삽입 : 데이터 입출력 경로를 조작하여 서버 자원을 수정.삭제할 수 있는 보안 약점이다. 사용자 입력값을 식별자로 사용하는 경우, 경로 순회 공격을 막는 필터를 사용하여 방지할 수 있다.
크로스사이트 스크립팅(XSS; Cross Site Scripting) : 웹페이지에 악의적인 스크립트를 삽입하여 방문자들의 정보를 탈취하거나, 비정상적인 기능 수행을 유발하는 보안 약점이다.
운영체제 명령어 삽입 : 외부 입력값을 통해 시스템 명령어의 실행을 유도함으로써 권한을 탈취하거나 시스템 장애를 유발하는 보안 약점이다.
메모리 버퍼 오버플로 : 연속된 메모리 공간을 사용하는 프로그램에서 할당된 메모리의 범위를 넘어선 위치에서 자료를 읽거나 쓰려고 할 때 발생하는 보안 약점이다.

[암호 알고리즘]

개인키 암호화(Private Key Encryption)기법
- 동일한 키로 데이터를 암호화하고 복호화한다.
- 데이터베이스 사용자는 평문의 정보를 암호화 알고리즘과 개인키를 이용하여 암호문으로 바꾸어 저장시켜 놓으면 사용자는 그 데이터베이스에 접근하기 위해 복호화 알고리즘과 개인키를 이용하여 다시 평문의 정보로 바꾸어 이용하는 방법이다.
- 대칭 암호 기법 또는 비밀키 암호화 기법이라고도 한다.
종류
- 블록 암호화 방식 : DES, SEED, AES, ARIA, IDEA
- 스트림 암호화 방식 : LFSR, RC4
장점 : 암호화/복호화 속도가 빠르며, 알고리즘이 단순하고, 공개키 암호 기법보다 파일의 크기가 작다.
단점 : 사용자의 증가에 따라 관리해야 할 키의 수가 상대적으로 많아진다.

공개키 암호화(Public Key Encryption)기법
- 데이터를 암호화할 때 사용하는 공개키(Public Key)는 데이터베이스 사용자에게 공개하고, 복호화할 때의 비밀키(Secret Key)는 관리자가 비밀리에 관리한다.
- 데이터베이스 사용자는 평문의 정보를 암호화 알고리즘과 공개키를 이용하여 암호문으로 바꾸어 저장시켜 놓고, 복호화하기 위해서는 비밀키과 복호화 알고리즘에 권한이 있는 사용자만이 복호화 알고리즘과 비밀키를 이용하여 다시 평문의 정보로 바꿀 수 있는 방법이다.
- 비대칭 암호 기법이라고도 하며, 대표적으로는 RSA(Rivest Shamir Adleman) 기법이 있다.
장점 : 키의 분배가 용이하고, 관리해야 할 키의 개수가 적다.
단점 : 암호화/복호화 속도가 느리며, 알고리즘이 복잡하고, 개인키 암호화 기법보다 파일의 크기가 크다.

양방향 알고리즘 종류
SEED
- 1999년 한국인터넷진흥원(KISA)에서 개발한 블록 암호화 알고리즘
- 블록 크기는 128비트이며, 키 길이에 따라 128, 256으로 분류된다.
ARIA(Academy Research Institute Agency)
- 2004년 국가정보원과 산학연협회가 개발된 블록 암호화 알고리즘
- 블록 크기는 128비트이며, 키 길이에 따라 128, 129, 256으로 분류된다.
DES(Data Encryption Standard)
- 1975년 미국 NBS에서 발표한 개인키 암호화 알고리즘
- DES를 3번 적용하여 보안을 더욱 강화한 3DES(Triple DES)도 있다.
- 블록 크기는 64비트이며, 키 길이는 56비트이다.
AES(Advanced Encryption Standard)
- 2001년 미국 표준 기술 연구소(NIST)에서 발표한 개인키 암호화 알고리즘
- DES의 한계를 느낀 NIST에서 공모한 후 발표
- 블록 크기는 128비트이며, 키 길이에 따라 128, 192, 256으로 분류된다.
RSA(Rivest Shamir Adleman)
- 1978년 MIT의 라이베이트(Rivest), 샤미르(Shamir), 애들먼(Adleman)에 의해 제안된 공개키 암호화 알고리즘
- 큰 숫자를 소인수분해 하기 어렵다는 것에 기반하여 만들어졌다.
- 공개키와 비밀키를 사용하는데, 여기서 키란 메시지를 열고 잠그는 상수(Constant)를 의미한다.
ECC(Elliptic Curve Cryptography)
- 1985년 RSA 암호 방식의 대안으로 제안되었다.
- 이산대수 문제를 타원곡선으로 옮겨 기밀성과 효율성을 높인 암호화 알고리즘
Rabin
- 소인수분해의 어려움에 안전성의 근거를 둔 암호화 알고리즘

해시(Hash)
- 임의의 길이의 입력 데이터나 메시지를 고정된 길이의 값이나 키로 변환하는 것
- 해시 알고리즘을 해시 함수라고 부르며, 해시 함수로 변환된 값이나 키를 해시값 또는 해시키라고 부른다.
- 복호화가 거의 불가능한 일방향 함수에 해당한다.
종류
- SHA 시리즈
- MD5 : 블록 크기는 512비트이며, 키 길이는 128비트이다.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 4장 시스템 보안 구축

[서비스 공격 유형]

서비스 거부(DoS; Denial of Service)공격의 개념
표적이 되는 서버의 자원을 고갈시킬 목적으로 다수의 공격자 또는 시스템에서 대량의 데이터를 한 곳의 서버에 집중적으로 전송함으로써, 표적이 되는 서버의 정상적인 기능을 방해하는 것

Ping of Death(죽음의 핑)
Ping 명령을 전송할 때 패킷의 크기를 인터넷 프로토콜 허용 범위 이상으로 전송하여 공격 대상의 네트워크를 마비시키는 서비스 거부 공격 방법

SMURFING(스머핑)
IP나 ICMP의 특성을 악용하여 엄청난 양의 데이터를 한 사이트에 집중적으로 보냄으로써 네트워크를 불능 상태로 만드는 공격 방법
공격자는 송신 주소를 공격 대상지의 IP주소로 위장하고 해당 네트워크 라우터의 브로드캐스트 주소를 수신지로 하여 패킷을 전송하면, 라우터의 브로드캐스트 주소로 수신된 패킷은 해당 네트워크 내의 모든 컴퓨터로 전송된다.

SYN Flooding
TCP(Transmission Control Protocol)는 신뢰성 있는 전송을 위해 3-way-handshake를 거친 후에 데이터를 전송하게 되는데, SYN Flooding은 공격자가 가상의 클라이언트로 위장하여 3-way-handshake 과정을 의도적으로 중단시킴으로써 공격 대상지인
서버가 대기 상태에 놓여 정상적인 서비스를 수행하지 못하게 하는 공격 방법이다.

Land
패킷을 전송할 때 송신 IP 주소와 수신 IP 주소를 모두 공격 대상의 IP 주소로 하여 공격 대상에게 전송하는 것, 이 패킷을 받은 공격 대상은 송신 IP 주소가 자신이므로 자신에게 응답을 수행하게 되는데, 이러한 패킷이 계속해서 전송될 경우 자신에 대해
무한히 응답하게 하는 공격이다.

DDoS(Distributed Denial of Service, 분산 서비스 거부) 공격
여러 곳에 분산된 공격 지점에서 한 곳의 서버에 대해 분산 서비스 공격을 수행하는 것, 네트워크에서 취약점이 있는 호스트들을 탐색한 후 이들 호스트들에 분산 서비스 공격용 툴을 설치하여 에어전트(Agent)로 만든 후 DDoS 공격에 이용한다.

네트워크 침해 공격 관련 용어
스미싱(Smishing) : 문자 메시지(SMS)를 이용해 사용자의 개인 신용 정보를 빼내는 수법이다.
Phishing : 개인 정보(Private Data)와 낚시(Fishing)의 합성어, 이메일이나 메신저 등을 통해 공기관이나 금융 기관을 사칭하여 개인 정보를 빼내는 기법
Ping Flood : 특정 사이트에 매우 많은 ICMP 메시지를 보내 이에 대한 응답(Respond)으로 시스템 자원을 모두 사용하게 해 시스템이 정상적으로 동작하지 못하도록 하는 공격 방법
스위치 재밍(Switch Jamming) : 위조된 매체 접근 제어(MAC) 주소를 지속적으로 네트워크로 흘려보내, 스위치 MAC 주소 테이블의 저장 기능을 혼란시켜 더비 허브(Dummy Hub)처럼 작동하게 하는 공격이다.

정보 보안 침해 공격 관련 용어
웜(Worm) : 네트워크를 통해 연속적으로 자신을 복제하여 시스템의 부하를 높임으로써 결국 시스템을 다운시키는 바이러스의 일종으로, 분산 서비스 거부 공격, 버퍼 오버플로 공격, 슬래머 등이 웜 공격의 한 형태이다.
키로거(Key Logger Attack) : 컴퓨터 사용자의 키보드 움직임을 탐지해 ID, 패스워드, 계좌번호, 카드번호 등과 같은 개인의 중요한 정보를 몰래 빼가는 해킹 공격
랜섬웨어(Ransomware) : 인터넷 사용자의 컴퓨터에 잠입해 내부 문서나 파일 등을 암호화해 사용자가 열지 못하게 하는 프로그램으로, 암호 해독용 프로그램의 전달을 조건으로 사용자에게 돈을 요구하기도 한다.
백도어(Back Door, Trap Door) : 시스템 설계자가 서비스 기술자나 유지 보수 프로그램 작성자(Programmer)의 액세스 편의를 위해 시스템 보안을 제거하여 만들어놓은 비밀 통로로, 컴퓨터 범죄에 악용되기도 한다.
트로이 목마(Trojan Horse) : 정상적인 기능을 하는 프로그램으로 위장하여 프로그램 내에 숨어 있다가 해당 프로그램이 동작할 떄 활성화되어 부작용을 일으키는 것, 자기 복제 능력은 없다.
파밍(Pharming) : 해커가 악성코드에 감염된 PC를 조작하여 이용자가 정상적인 사이트에 접속해도 중간에서 도메인을 탈취하여 가짜 사이트로 접속하게 한 다음 개인 정보나 금융정보를 몰래 빼내는 행위이다.

인증(Authentication)의 개념
다중 사용자 컴퓨터 시스템이나 네트워크 시스템에서 로그인을 요청한 사용자의 정보를 확인하는 보안 절차
인증된 사용자에 대해 요청한 자원이나 동작에 대한 권한 여부를 확인한 후 이를 부여하는 보안 절차를 인가(Authorization)라고 한다.
- 지식 기반 인증(Something You Know) : 사용자가 기억하고 있는 정보를 기반으로 인증을 수행하는 것
- 소유 기반 인증(Something You Have) : 사용자가 소유하고 있는 것을 기반으로 인증을 수행하는 것
- 생체 기반 인증(Something You Are) : 사용자의 고유한 생체 정보를 기반으로 인증을 수행하는 것
- 위치 기반 인증(Somewhere You Are) : 인증을 시도하는 위치의 적절성 확인
- 행위 기반 인증(Something You Do) : 사용자의 행동 정보를 이용해 인증 수행

[보안 솔루션]

침입 탐지 시스템(IDS; Intrusion Detection System) : 컴퓨터 시스템의 비정상적인 사용, 오용, 남용 등을 실시간으로 탐지하는 시스템이다.
VPN(Virtual Private Network, 가상 사설 통신망) : 가상 사설 네트워크로서 인터넷 등 통신 사업자의 공중 네트워크와 암호화 기술을 이용하여 사용자가 마치 자신의 전용 회선을 사용하는 것처럼 해주는 보안 솔루션이다.
SSH(Secure SHell, 시큐어 셸) : 다른 컴퓨터에 로그인, 원격 명령 실행, 파일 복사 등을 수행할 수 있도록 다양한 기능을 지우너하는 프로토콜 또는 이를 이용한 응용 프로그램이다.
- 데이터 암호화와 강력한 인증 방법으로 보안성이 낮은 네트워크에서도 안전하게 통신할 수 있다.
- 기본적으로는 22번 포트를 사용한다.
















